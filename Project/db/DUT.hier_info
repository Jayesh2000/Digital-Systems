|DUT
input_vector[0] => final:add_instance.rst
input_vector[1] => final:add_instance.clk
output_vector[0] <= final:add_instance.output_vector[0]
output_vector[1] <= final:add_instance.output_vector[1]
output_vector[2] <= final:add_instance.output_vector[2]
output_vector[3] <= final:add_instance.output_vector[3]
output_vector[4] <= final:add_instance.output_vector[4]
output_vector[5] <= final:add_instance.output_vector[5]
output_vector[6] <= final:add_instance.output_vector[6]
output_vector[7] <= final:add_instance.output_vector[7]
output_vector[8] <= final:add_instance.output_vector[8]
output_vector[9] <= final:add_instance.output_vector[9]
output_vector[10] <= final:add_instance.output_vector[10]
output_vector[11] <= final:add_instance.output_vector[11]
output_vector[12] <= final:add_instance.output_vector[12]
output_vector[13] <= final:add_instance.output_vector[13]
output_vector[14] <= final:add_instance.output_vector[14]
output_vector[15] <= final:add_instance.output_vector[15]


|DUT|final:add_instance
clk => Memory_syncread_syncwrite:mem1.clk
clk => T3[0].CLK
clk => T3[1].CLK
clk => T3[2].CLK
clk => T3[3].CLK
clk => T3[4].CLK
clk => T3[5].CLK
clk => T3[6].CLK
clk => T3[7].CLK
clk => T3[8].CLK
clk => T3[9].CLK
clk => T3[10].CLK
clk => T3[11].CLK
clk => T3[12].CLK
clk => T3[13].CLK
clk => T3[14].CLK
clk => T3[15].CLK
clk => T2[0].CLK
clk => T2[1].CLK
clk => T2[2].CLK
clk => T2[3].CLK
clk => T2[4].CLK
clk => T2[5].CLK
clk => T2[6].CLK
clk => T2[7].CLK
clk => T2[8].CLK
clk => T2[9].CLK
clk => T2[10].CLK
clk => T2[11].CLK
clk => T2[12].CLK
clk => T2[13].CLK
clk => T2[14].CLK
clk => T2[15].CLK
clk => T1[0].CLK
clk => T1[1].CLK
clk => T1[2].CLK
clk => T1[3].CLK
clk => T1[4].CLK
clk => T1[5].CLK
clk => T1[6].CLK
clk => T1[7].CLK
clk => T1[8].CLK
clk => T1[9].CLK
clk => T1[10].CLK
clk => T1[11].CLK
clk => T1[12].CLK
clk => T1[13].CLK
clk => T1[14].CLK
clk => T1[15].CLK
clk => IR[0].CLK
clk => IR[1].CLK
clk => IR[2].CLK
clk => IR[3].CLK
clk => IR[4].CLK
clk => IR[5].CLK
clk => IR[6].CLK
clk => IR[7].CLK
clk => IR[8].CLK
clk => IR[9].CLK
clk => IR[10].CLK
clk => IR[11].CLK
clk => IR[12].CLK
clk => IR[13].CLK
clk => IR[14].CLK
clk => IR[15].CLK
clk => c_flag[0].CLK
clk => z_flag[0].CLK
clk => IP[0].CLK
clk => IP[1].CLK
clk => IP[2].CLK
clk => IP[3].CLK
clk => IP[4].CLK
clk => IP[5].CLK
clk => IP[6].CLK
clk => IP[7].CLK
clk => IP[8].CLK
clk => IP[9].CLK
clk => IP[10].CLK
clk => IP[11].CLK
clk => IP[12].CLK
clk => IP[13].CLK
clk => IP[14].CLK
clk => IP[15].CLK
clk => register_file_VHDL:reg1.clk
clk => fsm_state~1.DATAIN
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => fsm_state.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => IP.OUTPUTSELECT
rst => z_flag.OUTPUTSELECT
rst => c_flag.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => IR.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T1.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T2.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => T3.OUTPUTSELECT
rst => register_file_VHDL:reg1.rst
output_vector[0] <= output_vector[0].DB_MAX_OUTPUT_PORT_TYPE
output_vector[1] <= output_vector[1].DB_MAX_OUTPUT_PORT_TYPE
output_vector[2] <= output_vector[2].DB_MAX_OUTPUT_PORT_TYPE
output_vector[3] <= output_vector[3].DB_MAX_OUTPUT_PORT_TYPE
output_vector[4] <= output_vector[4].DB_MAX_OUTPUT_PORT_TYPE
output_vector[5] <= output_vector[5].DB_MAX_OUTPUT_PORT_TYPE
output_vector[6] <= output_vector[6].DB_MAX_OUTPUT_PORT_TYPE
output_vector[7] <= output_vector[7].DB_MAX_OUTPUT_PORT_TYPE
output_vector[8] <= output_vector[8].DB_MAX_OUTPUT_PORT_TYPE
output_vector[9] <= output_vector[9].DB_MAX_OUTPUT_PORT_TYPE
output_vector[10] <= output_vector[10].DB_MAX_OUTPUT_PORT_TYPE
output_vector[11] <= output_vector[11].DB_MAX_OUTPUT_PORT_TYPE
output_vector[12] <= output_vector[12].DB_MAX_OUTPUT_PORT_TYPE
output_vector[13] <= output_vector[13].DB_MAX_OUTPUT_PORT_TYPE
output_vector[14] <= output_vector[14].DB_MAX_OUTPUT_PORT_TYPE
output_vector[15] <= output_vector[15].DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|Memory_syncread_syncwrite:mem1
address[0] => Memory~9.DATAIN
address[0] => Memory.WADDR
address[0] => Memory.RADDR
address[1] => Memory~8.DATAIN
address[1] => Memory.WADDR1
address[1] => Memory.RADDR1
address[2] => Memory~7.DATAIN
address[2] => Memory.WADDR2
address[2] => Memory.RADDR2
address[3] => Memory~6.DATAIN
address[3] => Memory.WADDR3
address[3] => Memory.RADDR3
address[4] => Memory~5.DATAIN
address[4] => Memory.WADDR4
address[4] => Memory.RADDR4
address[5] => Memory~4.DATAIN
address[5] => Memory.WADDR5
address[5] => Memory.RADDR5
address[6] => Memory~3.DATAIN
address[6] => Memory.WADDR6
address[6] => Memory.RADDR6
address[7] => Memory~2.DATAIN
address[7] => Memory.WADDR7
address[7] => Memory.RADDR7
address[8] => Memory~1.DATAIN
address[8] => Memory.WADDR8
address[8] => Memory.RADDR8
address[9] => Memory~0.DATAIN
address[9] => Memory.WADDR9
address[9] => Memory.RADDR9
address[10] => ~NO_FANOUT~
address[11] => ~NO_FANOUT~
address[12] => ~NO_FANOUT~
address[13] => ~NO_FANOUT~
address[14] => ~NO_FANOUT~
address[15] => ~NO_FANOUT~
Mem_datain[0] => Memory~25.DATAIN
Mem_datain[0] => Memory.DATAIN
Mem_datain[1] => Memory~24.DATAIN
Mem_datain[1] => Memory.DATAIN1
Mem_datain[2] => Memory~23.DATAIN
Mem_datain[2] => Memory.DATAIN2
Mem_datain[3] => Memory~22.DATAIN
Mem_datain[3] => Memory.DATAIN3
Mem_datain[4] => Memory~21.DATAIN
Mem_datain[4] => Memory.DATAIN4
Mem_datain[5] => Memory~20.DATAIN
Mem_datain[5] => Memory.DATAIN5
Mem_datain[6] => Memory~19.DATAIN
Mem_datain[6] => Memory.DATAIN6
Mem_datain[7] => Memory~18.DATAIN
Mem_datain[7] => Memory.DATAIN7
Mem_datain[8] => Memory~17.DATAIN
Mem_datain[8] => Memory.DATAIN8
Mem_datain[9] => Memory~16.DATAIN
Mem_datain[9] => Memory.DATAIN9
Mem_datain[10] => Memory~15.DATAIN
Mem_datain[10] => Memory.DATAIN10
Mem_datain[11] => Memory~14.DATAIN
Mem_datain[11] => Memory.DATAIN11
Mem_datain[12] => Memory~13.DATAIN
Mem_datain[12] => Memory.DATAIN12
Mem_datain[13] => Memory~12.DATAIN
Mem_datain[13] => Memory.DATAIN13
Mem_datain[14] => Memory~11.DATAIN
Mem_datain[14] => Memory.DATAIN14
Mem_datain[15] => Memory~10.DATAIN
Mem_datain[15] => Memory.DATAIN15
clk => Memory~26.CLK
clk => Memory~0.CLK
clk => Memory~1.CLK
clk => Memory~2.CLK
clk => Memory~3.CLK
clk => Memory~4.CLK
clk => Memory~5.CLK
clk => Memory~6.CLK
clk => Memory~7.CLK
clk => Memory~8.CLK
clk => Memory~9.CLK
clk => Memory~10.CLK
clk => Memory~11.CLK
clk => Memory~12.CLK
clk => Memory~13.CLK
clk => Memory~14.CLK
clk => Memory~15.CLK
clk => Memory~16.CLK
clk => Memory~17.CLK
clk => Memory~18.CLK
clk => Memory~19.CLK
clk => Memory~20.CLK
clk => Memory~21.CLK
clk => Memory~22.CLK
clk => Memory~23.CLK
clk => Memory~24.CLK
clk => Memory~25.CLK
clk => Mem_dataout[0]~reg0.CLK
clk => Mem_dataout[1]~reg0.CLK
clk => Mem_dataout[2]~reg0.CLK
clk => Mem_dataout[3]~reg0.CLK
clk => Mem_dataout[4]~reg0.CLK
clk => Mem_dataout[5]~reg0.CLK
clk => Mem_dataout[6]~reg0.CLK
clk => Mem_dataout[7]~reg0.CLK
clk => Mem_dataout[8]~reg0.CLK
clk => Mem_dataout[9]~reg0.CLK
clk => Mem_dataout[10]~reg0.CLK
clk => Mem_dataout[11]~reg0.CLK
clk => Mem_dataout[12]~reg0.CLK
clk => Mem_dataout[13]~reg0.CLK
clk => Mem_dataout[14]~reg0.CLK
clk => Mem_dataout[15]~reg0.CLK
clk => Memory.CLK0
Mem_wr => Memory~26.DATAIN
Mem_wr => Memory.WE
Mem_rd => Mem_dataout[1]~reg0.ENA
Mem_rd => Mem_dataout[0]~reg0.ENA
Mem_rd => Mem_dataout[2]~reg0.ENA
Mem_rd => Mem_dataout[3]~reg0.ENA
Mem_rd => Mem_dataout[4]~reg0.ENA
Mem_rd => Mem_dataout[5]~reg0.ENA
Mem_rd => Mem_dataout[6]~reg0.ENA
Mem_rd => Mem_dataout[7]~reg0.ENA
Mem_rd => Mem_dataout[8]~reg0.ENA
Mem_rd => Mem_dataout[9]~reg0.ENA
Mem_rd => Mem_dataout[10]~reg0.ENA
Mem_rd => Mem_dataout[11]~reg0.ENA
Mem_rd => Mem_dataout[12]~reg0.ENA
Mem_rd => Mem_dataout[13]~reg0.ENA
Mem_rd => Mem_dataout[14]~reg0.ENA
Mem_rd => Mem_dataout[15]~reg0.ENA
Mem_dataout[0] <= Mem_dataout[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mem_dataout[1] <= Mem_dataout[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mem_dataout[2] <= Mem_dataout[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mem_dataout[3] <= Mem_dataout[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mem_dataout[4] <= Mem_dataout[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mem_dataout[5] <= Mem_dataout[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mem_dataout[6] <= Mem_dataout[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mem_dataout[7] <= Mem_dataout[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mem_dataout[8] <= Mem_dataout[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mem_dataout[9] <= Mem_dataout[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mem_dataout[10] <= Mem_dataout[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mem_dataout[11] <= Mem_dataout[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mem_dataout[12] <= Mem_dataout[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mem_dataout[13] <= Mem_dataout[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mem_dataout[14] <= Mem_dataout[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Mem_dataout[15] <= Mem_dataout[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1
zero_prev[0] => mux2to1:to1a.s0[0]
carry_prev[0] => Mux0.IN1
carry_prev[0] => mux2to1:to1b.s0[0]
a[0] => result[0].IN0
a[0] => fa16bit:fa2.a[0]
a[0] => fa16bit:fa1.a[0]
a[1] => result[1].IN0
a[1] => fa16bit:fa2.a[1]
a[1] => fa16bit:fa1.a[1]
a[2] => result[2].IN0
a[2] => fa16bit:fa2.a[2]
a[2] => fa16bit:fa1.a[2]
a[3] => result[3].IN0
a[3] => fa16bit:fa2.a[3]
a[3] => fa16bit:fa1.a[3]
a[4] => result[4].IN0
a[4] => fa16bit:fa2.a[4]
a[4] => fa16bit:fa1.a[4]
a[5] => result[5].IN0
a[5] => fa16bit:fa2.a[5]
a[5] => fa16bit:fa1.a[5]
a[6] => result[6].IN0
a[6] => fa16bit:fa2.a[6]
a[6] => fa16bit:fa1.a[6]
a[7] => result[7].IN0
a[7] => fa16bit:fa2.a[7]
a[7] => fa16bit:fa1.a[7]
a[8] => result[8].IN0
a[8] => fa16bit:fa2.a[8]
a[8] => fa16bit:fa1.a[8]
a[9] => result[9].IN0
a[9] => fa16bit:fa2.a[9]
a[9] => fa16bit:fa1.a[9]
a[10] => result[10].IN0
a[10] => fa16bit:fa2.a[10]
a[10] => fa16bit:fa1.a[10]
a[11] => result[11].IN0
a[11] => fa16bit:fa2.a[11]
a[11] => fa16bit:fa1.a[11]
a[12] => result[12].IN0
a[12] => fa16bit:fa2.a[12]
a[12] => fa16bit:fa1.a[12]
a[13] => result[13].IN0
a[13] => fa16bit:fa2.a[13]
a[13] => fa16bit:fa1.a[13]
a[14] => result[14].IN0
a[14] => fa16bit:fa2.a[14]
a[14] => fa16bit:fa1.a[14]
a[15] => result[15].IN0
a[15] => fa16bit:fa2.a[15]
a[15] => fa16bit:fa1.a[15]
b[0] => result[0].IN1
b[0] => fa16bit:fa2.b[0]
b[0] => fa16bit:fa1.b[0]
b[1] => result[1].IN1
b[1] => fa16bit:fa2.b[1]
b[1] => fa16bit:fa1.b[1]
b[2] => result[2].IN1
b[2] => fa16bit:fa2.b[2]
b[2] => fa16bit:fa1.b[2]
b[3] => result[3].IN1
b[3] => fa16bit:fa2.b[3]
b[3] => fa16bit:fa1.b[3]
b[4] => result[4].IN1
b[4] => fa16bit:fa2.b[4]
b[4] => fa16bit:fa1.b[4]
b[5] => result[5].IN1
b[5] => fa16bit:fa2.b[5]
b[5] => fa16bit:fa1.b[5]
b[6] => result[6].IN1
b[6] => fa16bit:fa2.b[6]
b[6] => fa16bit:fa1.b[6]
b[7] => result[7].IN1
b[7] => fa16bit:fa2.b[7]
b[7] => fa16bit:fa1.b[7]
b[8] => result[8].IN1
b[8] => fa16bit:fa2.b[8]
b[8] => fa16bit:fa1.b[8]
b[9] => result[9].IN1
b[9] => fa16bit:fa2.b[9]
b[9] => fa16bit:fa1.b[9]
b[10] => result[10].IN1
b[10] => fa16bit:fa2.b[10]
b[10] => fa16bit:fa1.b[10]
b[11] => result[11].IN1
b[11] => fa16bit:fa2.b[11]
b[11] => fa16bit:fa1.b[11]
b[12] => result[12].IN1
b[12] => fa16bit:fa2.b[12]
b[12] => fa16bit:fa1.b[12]
b[13] => result[13].IN1
b[13] => fa16bit:fa2.b[13]
b[13] => fa16bit:fa1.b[13]
b[14] => result[14].IN1
b[14] => fa16bit:fa2.b[14]
b[14] => fa16bit:fa1.b[14]
b[15] => result[15].IN1
b[15] => fa16bit:fa2.b[15]
b[15] => fa16bit:fa1.b[15]
alu_control[0] => Mux0.IN3
alu_control[0] => Mux1.IN2
alu_control[0] => Mux2.IN2
alu_control[0] => Mux3.IN2
alu_control[0] => Mux4.IN2
alu_control[0] => Mux5.IN2
alu_control[0] => Mux6.IN2
alu_control[0] => Mux7.IN2
alu_control[0] => Mux8.IN2
alu_control[0] => Mux9.IN2
alu_control[0] => Mux10.IN2
alu_control[0] => Mux11.IN2
alu_control[0] => Mux12.IN2
alu_control[0] => Mux13.IN2
alu_control[0] => Mux14.IN2
alu_control[0] => Mux15.IN2
alu_control[0] => Mux16.IN2
alu_control[0] => Mux17.IN5
alu_control[1] => Mux0.IN2
alu_control[1] => Mux1.IN1
alu_control[1] => Mux2.IN1
alu_control[1] => Mux3.IN1
alu_control[1] => Mux4.IN1
alu_control[1] => Mux5.IN1
alu_control[1] => Mux6.IN1
alu_control[1] => Mux7.IN1
alu_control[1] => Mux8.IN1
alu_control[1] => Mux9.IN1
alu_control[1] => Mux10.IN1
alu_control[1] => Mux11.IN1
alu_control[1] => Mux12.IN1
alu_control[1] => Mux13.IN1
alu_control[1] => Mux14.IN1
alu_control[1] => Mux15.IN1
alu_control[1] => Mux16.IN1
alu_control[1] => Mux17.IN4
alu_result[0] <= result1[0].DB_MAX_OUTPUT_PORT_TYPE
alu_result[1] <= result1[1].DB_MAX_OUTPUT_PORT_TYPE
alu_result[2] <= result1[2].DB_MAX_OUTPUT_PORT_TYPE
alu_result[3] <= result1[3].DB_MAX_OUTPUT_PORT_TYPE
alu_result[4] <= result1[4].DB_MAX_OUTPUT_PORT_TYPE
alu_result[5] <= result1[5].DB_MAX_OUTPUT_PORT_TYPE
alu_result[6] <= result1[6].DB_MAX_OUTPUT_PORT_TYPE
alu_result[7] <= result1[7].DB_MAX_OUTPUT_PORT_TYPE
alu_result[8] <= result1[8].DB_MAX_OUTPUT_PORT_TYPE
alu_result[9] <= result1[9].DB_MAX_OUTPUT_PORT_TYPE
alu_result[10] <= result1[10].DB_MAX_OUTPUT_PORT_TYPE
alu_result[11] <= result1[11].DB_MAX_OUTPUT_PORT_TYPE
alu_result[12] <= result1[12].DB_MAX_OUTPUT_PORT_TYPE
alu_result[13] <= result1[13].DB_MAX_OUTPUT_PORT_TYPE
alu_result[14] <= result1[14].DB_MAX_OUTPUT_PORT_TYPE
alu_result[15] <= result1[15].DB_MAX_OUTPUT_PORT_TYPE
zero_control[0] => mux2to1:to1a.a[0]
carry_control[0] => mux2to1:to1b.a[0]
zero <= mux2to1:to1a.z
carry <= mux2to1:to1b.z


|DUT|final:add_instance|alu:alu1|fa16bit:fa2
a[0] => fa8bit:fa1.a[0]
a[1] => fa8bit:fa1.a[1]
a[2] => fa8bit:fa1.a[2]
a[3] => fa8bit:fa1.a[3]
a[4] => fa8bit:fa1.a[4]
a[5] => fa8bit:fa1.a[5]
a[6] => fa8bit:fa1.a[6]
a[7] => fa8bit:fa1.a[7]
a[8] => fa8bit:fa2.a[0]
a[9] => fa8bit:fa2.a[1]
a[10] => fa8bit:fa2.a[2]
a[11] => fa8bit:fa2.a[3]
a[12] => fa8bit:fa2.a[4]
a[13] => fa8bit:fa2.a[5]
a[14] => fa8bit:fa2.a[6]
a[15] => fa8bit:fa2.a[7]
b[0] => binv[0].IN0
b[1] => binv[1].IN0
b[2] => binv[2].IN0
b[3] => binv[3].IN0
b[4] => binv[4].IN0
b[5] => binv[5].IN0
b[6] => binv[6].IN0
b[7] => binv[7].IN0
b[8] => binv[8].IN0
b[9] => binv[9].IN0
b[10] => binv[10].IN0
b[11] => binv[11].IN0
b[12] => binv[12].IN0
b[13] => binv[13].IN0
b[14] => binv[14].IN0
b[15] => binv[15].IN0
cin => binv[15].IN1
cin => binv[14].IN1
cin => binv[13].IN1
cin => binv[12].IN1
cin => binv[11].IN1
cin => binv[10].IN1
cin => binv[9].IN1
cin => binv[8].IN1
cin => binv[7].IN1
cin => binv[6].IN1
cin => binv[5].IN1
cin => binv[4].IN1
cin => binv[3].IN1
cin => binv[2].IN1
cin => binv[1].IN1
cin => binv[0].IN1
cin => fa8bit:fa1.cin
s[0] <= fa8bit:fa1.s[0]
s[1] <= fa8bit:fa1.s[1]
s[2] <= fa8bit:fa1.s[2]
s[3] <= fa8bit:fa1.s[3]
s[4] <= fa8bit:fa1.s[4]
s[5] <= fa8bit:fa1.s[5]
s[6] <= fa8bit:fa1.s[6]
s[7] <= fa8bit:fa1.s[7]
s[8] <= fa8bit:fa2.s[0]
s[9] <= fa8bit:fa2.s[1]
s[10] <= fa8bit:fa2.s[2]
s[11] <= fa8bit:fa2.s[3]
s[12] <= fa8bit:fa2.s[4]
s[13] <= fa8bit:fa2.s[5]
s[14] <= fa8bit:fa2.s[6]
s[15] <= fa8bit:fa2.s[7]
cout <= fa8bit:fa2.cout


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa1
a[0] => fa1bit:fa0.a
a[1] => fa1bit:fa1.a
a[2] => fa1bit:fa2.a
a[3] => fa1bit:fa3.a
a[4] => fa1bit:fa4.a
a[5] => fa1bit:fa5.a
a[6] => fa1bit:fa6.a
a[7] => fa1bit:fa7.a
b[0] => fa1bit:fa0.b
b[1] => fa1bit:fa1.b
b[2] => fa1bit:fa2.b
b[3] => fa1bit:fa3.b
b[4] => fa1bit:fa4.b
b[5] => fa1bit:fa5.b
b[6] => fa1bit:fa6.b
b[7] => fa1bit:fa7.b
cin => fa1bit:fa0.cin
s[0] <= fa1bit:fa0.s
s[1] <= fa1bit:fa1.s
s[2] <= fa1bit:fa2.s
s[3] <= fa1bit:fa3.s
s[4] <= fa1bit:fa4.s
s[5] <= fa1bit:fa5.s
s[6] <= fa1bit:fa6.s
s[7] <= fa1bit:fa7.s
cout <= fa1bit:fa7.cout


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa1|fa1bit:fa0
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa1|fa1bit:fa1
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa1|fa1bit:fa2
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa1|fa1bit:fa3
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa1|fa1bit:fa4
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa1|fa1bit:fa5
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa1|fa1bit:fa6
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa1|fa1bit:fa7
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa2
a[0] => fa1bit:fa0.a
a[1] => fa1bit:fa1.a
a[2] => fa1bit:fa2.a
a[3] => fa1bit:fa3.a
a[4] => fa1bit:fa4.a
a[5] => fa1bit:fa5.a
a[6] => fa1bit:fa6.a
a[7] => fa1bit:fa7.a
b[0] => fa1bit:fa0.b
b[1] => fa1bit:fa1.b
b[2] => fa1bit:fa2.b
b[3] => fa1bit:fa3.b
b[4] => fa1bit:fa4.b
b[5] => fa1bit:fa5.b
b[6] => fa1bit:fa6.b
b[7] => fa1bit:fa7.b
cin => fa1bit:fa0.cin
s[0] <= fa1bit:fa0.s
s[1] <= fa1bit:fa1.s
s[2] <= fa1bit:fa2.s
s[3] <= fa1bit:fa3.s
s[4] <= fa1bit:fa4.s
s[5] <= fa1bit:fa5.s
s[6] <= fa1bit:fa6.s
s[7] <= fa1bit:fa7.s
cout <= fa1bit:fa7.cout


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa2|fa1bit:fa0
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa2|fa1bit:fa1
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa2|fa1bit:fa2
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa2|fa1bit:fa3
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa2|fa1bit:fa4
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa2|fa1bit:fa5
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa2|fa1bit:fa6
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa2|fa8bit:fa2|fa1bit:fa7
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1
a[0] => fa8bit:fa1.a[0]
a[1] => fa8bit:fa1.a[1]
a[2] => fa8bit:fa1.a[2]
a[3] => fa8bit:fa1.a[3]
a[4] => fa8bit:fa1.a[4]
a[5] => fa8bit:fa1.a[5]
a[6] => fa8bit:fa1.a[6]
a[7] => fa8bit:fa1.a[7]
a[8] => fa8bit:fa2.a[0]
a[9] => fa8bit:fa2.a[1]
a[10] => fa8bit:fa2.a[2]
a[11] => fa8bit:fa2.a[3]
a[12] => fa8bit:fa2.a[4]
a[13] => fa8bit:fa2.a[5]
a[14] => fa8bit:fa2.a[6]
a[15] => fa8bit:fa2.a[7]
b[0] => binv[0].IN0
b[1] => binv[1].IN0
b[2] => binv[2].IN0
b[3] => binv[3].IN0
b[4] => binv[4].IN0
b[5] => binv[5].IN0
b[6] => binv[6].IN0
b[7] => binv[7].IN0
b[8] => binv[8].IN0
b[9] => binv[9].IN0
b[10] => binv[10].IN0
b[11] => binv[11].IN0
b[12] => binv[12].IN0
b[13] => binv[13].IN0
b[14] => binv[14].IN0
b[15] => binv[15].IN0
cin => binv[15].IN1
cin => binv[14].IN1
cin => binv[13].IN1
cin => binv[12].IN1
cin => binv[11].IN1
cin => binv[10].IN1
cin => binv[9].IN1
cin => binv[8].IN1
cin => binv[7].IN1
cin => binv[6].IN1
cin => binv[5].IN1
cin => binv[4].IN1
cin => binv[3].IN1
cin => binv[2].IN1
cin => binv[1].IN1
cin => binv[0].IN1
cin => fa8bit:fa1.cin
s[0] <= fa8bit:fa1.s[0]
s[1] <= fa8bit:fa1.s[1]
s[2] <= fa8bit:fa1.s[2]
s[3] <= fa8bit:fa1.s[3]
s[4] <= fa8bit:fa1.s[4]
s[5] <= fa8bit:fa1.s[5]
s[6] <= fa8bit:fa1.s[6]
s[7] <= fa8bit:fa1.s[7]
s[8] <= fa8bit:fa2.s[0]
s[9] <= fa8bit:fa2.s[1]
s[10] <= fa8bit:fa2.s[2]
s[11] <= fa8bit:fa2.s[3]
s[12] <= fa8bit:fa2.s[4]
s[13] <= fa8bit:fa2.s[5]
s[14] <= fa8bit:fa2.s[6]
s[15] <= fa8bit:fa2.s[7]
cout <= fa8bit:fa2.cout


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa1
a[0] => fa1bit:fa0.a
a[1] => fa1bit:fa1.a
a[2] => fa1bit:fa2.a
a[3] => fa1bit:fa3.a
a[4] => fa1bit:fa4.a
a[5] => fa1bit:fa5.a
a[6] => fa1bit:fa6.a
a[7] => fa1bit:fa7.a
b[0] => fa1bit:fa0.b
b[1] => fa1bit:fa1.b
b[2] => fa1bit:fa2.b
b[3] => fa1bit:fa3.b
b[4] => fa1bit:fa4.b
b[5] => fa1bit:fa5.b
b[6] => fa1bit:fa6.b
b[7] => fa1bit:fa7.b
cin => fa1bit:fa0.cin
s[0] <= fa1bit:fa0.s
s[1] <= fa1bit:fa1.s
s[2] <= fa1bit:fa2.s
s[3] <= fa1bit:fa3.s
s[4] <= fa1bit:fa4.s
s[5] <= fa1bit:fa5.s
s[6] <= fa1bit:fa6.s
s[7] <= fa1bit:fa7.s
cout <= fa1bit:fa7.cout


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa1|fa1bit:fa0
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa1|fa1bit:fa1
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa1|fa1bit:fa2
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa1|fa1bit:fa3
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa1|fa1bit:fa4
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa1|fa1bit:fa5
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa1|fa1bit:fa6
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa1|fa1bit:fa7
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa2
a[0] => fa1bit:fa0.a
a[1] => fa1bit:fa1.a
a[2] => fa1bit:fa2.a
a[3] => fa1bit:fa3.a
a[4] => fa1bit:fa4.a
a[5] => fa1bit:fa5.a
a[6] => fa1bit:fa6.a
a[7] => fa1bit:fa7.a
b[0] => fa1bit:fa0.b
b[1] => fa1bit:fa1.b
b[2] => fa1bit:fa2.b
b[3] => fa1bit:fa3.b
b[4] => fa1bit:fa4.b
b[5] => fa1bit:fa5.b
b[6] => fa1bit:fa6.b
b[7] => fa1bit:fa7.b
cin => fa1bit:fa0.cin
s[0] <= fa1bit:fa0.s
s[1] <= fa1bit:fa1.s
s[2] <= fa1bit:fa2.s
s[3] <= fa1bit:fa3.s
s[4] <= fa1bit:fa4.s
s[5] <= fa1bit:fa5.s
s[6] <= fa1bit:fa6.s
s[7] <= fa1bit:fa7.s
cout <= fa1bit:fa7.cout


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa2|fa1bit:fa0
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa2|fa1bit:fa1
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa2|fa1bit:fa2
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa2|fa1bit:fa3
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa2|fa1bit:fa4
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa2|fa1bit:fa5
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa2|fa1bit:fa6
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|fa16bit:fa1|fa8bit:fa2|fa1bit:fa7
a => s.IN0
a => cout.IN0
a => cout.IN0
b => s.IN1
b => cout.IN1
b => cout.IN0
cin => s.IN1
cin => cout.IN1
cin => cout.IN1
s <= s.DB_MAX_OUTPUT_PORT_TYPE
cout <= cout.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|mux2to1:to1b
a[0] => z.OUTPUTSELECT
s0[0] => z.DATAB
s1[0] => z.DATAA
z <= z.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|alu:alu1|mux2to1:to1a
a[0] => z.OUTPUTSELECT
s0[0] => z.DATAB
s1[0] => z.DATAA
z <= z.DB_MAX_OUTPUT_PORT_TYPE


|DUT|final:add_instance|register_file_VHDL:reg1
clk => reg_array[7][0].CLK
clk => reg_array[7][1].CLK
clk => reg_array[7][2].CLK
clk => reg_array[7][3].CLK
clk => reg_array[7][4].CLK
clk => reg_array[7][5].CLK
clk => reg_array[7][6].CLK
clk => reg_array[7][7].CLK
clk => reg_array[7][8].CLK
clk => reg_array[7][9].CLK
clk => reg_array[7][10].CLK
clk => reg_array[7][11].CLK
clk => reg_array[7][12].CLK
clk => reg_array[7][13].CLK
clk => reg_array[7][14].CLK
clk => reg_array[7][15].CLK
clk => reg_array[6][0].CLK
clk => reg_array[6][1].CLK
clk => reg_array[6][2].CLK
clk => reg_array[6][3].CLK
clk => reg_array[6][4].CLK
clk => reg_array[6][5].CLK
clk => reg_array[6][6].CLK
clk => reg_array[6][7].CLK
clk => reg_array[6][8].CLK
clk => reg_array[6][9].CLK
clk => reg_array[6][10].CLK
clk => reg_array[6][11].CLK
clk => reg_array[6][12].CLK
clk => reg_array[6][13].CLK
clk => reg_array[6][14].CLK
clk => reg_array[6][15].CLK
clk => reg_array[5][0].CLK
clk => reg_array[5][1].CLK
clk => reg_array[5][2].CLK
clk => reg_array[5][3].CLK
clk => reg_array[5][4].CLK
clk => reg_array[5][5].CLK
clk => reg_array[5][6].CLK
clk => reg_array[5][7].CLK
clk => reg_array[5][8].CLK
clk => reg_array[5][9].CLK
clk => reg_array[5][10].CLK
clk => reg_array[5][11].CLK
clk => reg_array[5][12].CLK
clk => reg_array[5][13].CLK
clk => reg_array[5][14].CLK
clk => reg_array[5][15].CLK
clk => reg_array[4][0].CLK
clk => reg_array[4][1].CLK
clk => reg_array[4][2].CLK
clk => reg_array[4][3].CLK
clk => reg_array[4][4].CLK
clk => reg_array[4][5].CLK
clk => reg_array[4][6].CLK
clk => reg_array[4][7].CLK
clk => reg_array[4][8].CLK
clk => reg_array[4][9].CLK
clk => reg_array[4][10].CLK
clk => reg_array[4][11].CLK
clk => reg_array[4][12].CLK
clk => reg_array[4][13].CLK
clk => reg_array[4][14].CLK
clk => reg_array[4][15].CLK
clk => reg_array[3][0].CLK
clk => reg_array[3][1].CLK
clk => reg_array[3][2].CLK
clk => reg_array[3][3].CLK
clk => reg_array[3][4].CLK
clk => reg_array[3][5].CLK
clk => reg_array[3][6].CLK
clk => reg_array[3][7].CLK
clk => reg_array[3][8].CLK
clk => reg_array[3][9].CLK
clk => reg_array[3][10].CLK
clk => reg_array[3][11].CLK
clk => reg_array[3][12].CLK
clk => reg_array[3][13].CLK
clk => reg_array[3][14].CLK
clk => reg_array[3][15].CLK
clk => reg_array[2][0].CLK
clk => reg_array[2][1].CLK
clk => reg_array[2][2].CLK
clk => reg_array[2][3].CLK
clk => reg_array[2][4].CLK
clk => reg_array[2][5].CLK
clk => reg_array[2][6].CLK
clk => reg_array[2][7].CLK
clk => reg_array[2][8].CLK
clk => reg_array[2][9].CLK
clk => reg_array[2][10].CLK
clk => reg_array[2][11].CLK
clk => reg_array[2][12].CLK
clk => reg_array[2][13].CLK
clk => reg_array[2][14].CLK
clk => reg_array[2][15].CLK
clk => reg_array[1][0].CLK
clk => reg_array[1][1].CLK
clk => reg_array[1][2].CLK
clk => reg_array[1][3].CLK
clk => reg_array[1][4].CLK
clk => reg_array[1][5].CLK
clk => reg_array[1][6].CLK
clk => reg_array[1][7].CLK
clk => reg_array[1][8].CLK
clk => reg_array[1][9].CLK
clk => reg_array[1][10].CLK
clk => reg_array[1][11].CLK
clk => reg_array[1][12].CLK
clk => reg_array[1][13].CLK
clk => reg_array[1][14].CLK
clk => reg_array[1][15].CLK
clk => reg_array[0][0].CLK
clk => reg_array[0][1].CLK
clk => reg_array[0][2].CLK
clk => reg_array[0][3].CLK
clk => reg_array[0][4].CLK
clk => reg_array[0][5].CLK
clk => reg_array[0][6].CLK
clk => reg_array[0][7].CLK
clk => reg_array[0][8].CLK
clk => reg_array[0][9].CLK
clk => reg_array[0][10].CLK
clk => reg_array[0][11].CLK
clk => reg_array[0][12].CLK
clk => reg_array[0][13].CLK
clk => reg_array[0][14].CLK
clk => reg_array[0][15].CLK
rst => reg_array[7][0].ACLR
rst => reg_array[7][1].ACLR
rst => reg_array[7][2].ACLR
rst => reg_array[7][3].ACLR
rst => reg_array[7][4].ACLR
rst => reg_array[7][5].ACLR
rst => reg_array[7][6].ACLR
rst => reg_array[7][7].ACLR
rst => reg_array[7][8].ACLR
rst => reg_array[7][9].ACLR
rst => reg_array[7][10].ACLR
rst => reg_array[7][11].ACLR
rst => reg_array[7][12].ACLR
rst => reg_array[7][13].ACLR
rst => reg_array[7][14].ACLR
rst => reg_array[7][15].ACLR
rst => reg_array[6][0].PRESET
rst => reg_array[6][1].ACLR
rst => reg_array[6][2].ACLR
rst => reg_array[6][3].ACLR
rst => reg_array[6][4].ACLR
rst => reg_array[6][5].ACLR
rst => reg_array[6][6].ACLR
rst => reg_array[6][7].ACLR
rst => reg_array[6][8].ACLR
rst => reg_array[6][9].ACLR
rst => reg_array[6][10].ACLR
rst => reg_array[6][11].ACLR
rst => reg_array[6][12].ACLR
rst => reg_array[6][13].ACLR
rst => reg_array[6][14].ACLR
rst => reg_array[6][15].ACLR
rst => reg_array[5][0].ACLR
rst => reg_array[5][1].ACLR
rst => reg_array[5][2].ACLR
rst => reg_array[5][3].ACLR
rst => reg_array[5][4].ACLR
rst => reg_array[5][5].ACLR
rst => reg_array[5][6].ACLR
rst => reg_array[5][7].ACLR
rst => reg_array[5][8].ACLR
rst => reg_array[5][9].ACLR
rst => reg_array[5][10].ACLR
rst => reg_array[5][11].ACLR
rst => reg_array[5][12].ACLR
rst => reg_array[5][13].ACLR
rst => reg_array[5][14].ACLR
rst => reg_array[5][15].ACLR
rst => reg_array[4][0].PRESET
rst => reg_array[4][1].ACLR
rst => reg_array[4][2].ACLR
rst => reg_array[4][3].ACLR
rst => reg_array[4][4].ACLR
rst => reg_array[4][5].ACLR
rst => reg_array[4][6].ACLR
rst => reg_array[4][7].ACLR
rst => reg_array[4][8].ACLR
rst => reg_array[4][9].ACLR
rst => reg_array[4][10].ACLR
rst => reg_array[4][11].ACLR
rst => reg_array[4][12].ACLR
rst => reg_array[4][13].ACLR
rst => reg_array[4][14].ACLR
rst => reg_array[4][15].ACLR
rst => reg_array[3][0].PRESET
rst => reg_array[3][1].PRESET
rst => reg_array[3][2].PRESET
rst => reg_array[3][3].PRESET
rst => reg_array[3][4].PRESET
rst => reg_array[3][5].PRESET
rst => reg_array[3][6].PRESET
rst => reg_array[3][7].PRESET
rst => reg_array[3][8].PRESET
rst => reg_array[3][9].PRESET
rst => reg_array[3][10].PRESET
rst => reg_array[3][11].PRESET
rst => reg_array[3][12].PRESET
rst => reg_array[3][13].PRESET
rst => reg_array[3][14].PRESET
rst => reg_array[3][15].PRESET
rst => reg_array[2][0].PRESET
rst => reg_array[2][1].ACLR
rst => reg_array[2][2].ACLR
rst => reg_array[2][3].ACLR
rst => reg_array[2][4].ACLR
rst => reg_array[2][5].ACLR
rst => reg_array[2][6].ACLR
rst => reg_array[2][7].ACLR
rst => reg_array[2][8].ACLR
rst => reg_array[2][9].ACLR
rst => reg_array[2][10].ACLR
rst => reg_array[2][11].ACLR
rst => reg_array[2][12].ACLR
rst => reg_array[2][13].ACLR
rst => reg_array[2][14].ACLR
rst => reg_array[2][15].ACLR
rst => reg_array[1][0].PRESET
rst => reg_array[1][1].ACLR
rst => reg_array[1][2].ACLR
rst => reg_array[1][3].ACLR
rst => reg_array[1][4].ACLR
rst => reg_array[1][5].ACLR
rst => reg_array[1][6].ACLR
rst => reg_array[1][7].ACLR
rst => reg_array[1][8].ACLR
rst => reg_array[1][9].ACLR
rst => reg_array[1][10].ACLR
rst => reg_array[1][11].ACLR
rst => reg_array[1][12].ACLR
rst => reg_array[1][13].ACLR
rst => reg_array[1][14].ACLR
rst => reg_array[1][15].ACLR
rst => reg_array[0][0].ACLR
rst => reg_array[0][1].ACLR
rst => reg_array[0][2].ACLR
rst => reg_array[0][3].ACLR
rst => reg_array[0][4].PRESET
rst => reg_array[0][5].ACLR
rst => reg_array[0][6].ACLR
rst => reg_array[0][7].ACLR
rst => reg_array[0][8].ACLR
rst => reg_array[0][9].ACLR
rst => reg_array[0][10].ACLR
rst => reg_array[0][11].ACLR
rst => reg_array[0][12].ACLR
rst => reg_array[0][13].ACLR
rst => reg_array[0][14].ACLR
rst => reg_array[0][15].ACLR
reg_write_en => reg_array[0][15].ENA
reg_write_en => reg_array[0][14].ENA
reg_write_en => reg_array[0][13].ENA
reg_write_en => reg_array[0][12].ENA
reg_write_en => reg_array[0][11].ENA
reg_write_en => reg_array[0][10].ENA
reg_write_en => reg_array[0][9].ENA
reg_write_en => reg_array[0][8].ENA
reg_write_en => reg_array[0][7].ENA
reg_write_en => reg_array[0][6].ENA
reg_write_en => reg_array[0][5].ENA
reg_write_en => reg_array[0][4].ENA
reg_write_en => reg_array[0][3].ENA
reg_write_en => reg_array[0][2].ENA
reg_write_en => reg_array[0][1].ENA
reg_write_en => reg_array[0][0].ENA
reg_write_en => reg_array[1][15].ENA
reg_write_en => reg_array[1][14].ENA
reg_write_en => reg_array[1][13].ENA
reg_write_en => reg_array[1][12].ENA
reg_write_en => reg_array[1][11].ENA
reg_write_en => reg_array[1][10].ENA
reg_write_en => reg_array[1][9].ENA
reg_write_en => reg_array[1][8].ENA
reg_write_en => reg_array[1][7].ENA
reg_write_en => reg_array[1][6].ENA
reg_write_en => reg_array[1][5].ENA
reg_write_en => reg_array[1][4].ENA
reg_write_en => reg_array[1][3].ENA
reg_write_en => reg_array[1][2].ENA
reg_write_en => reg_array[1][1].ENA
reg_write_en => reg_array[1][0].ENA
reg_write_en => reg_array[2][15].ENA
reg_write_en => reg_array[2][14].ENA
reg_write_en => reg_array[2][13].ENA
reg_write_en => reg_array[2][12].ENA
reg_write_en => reg_array[2][11].ENA
reg_write_en => reg_array[2][10].ENA
reg_write_en => reg_array[2][9].ENA
reg_write_en => reg_array[2][8].ENA
reg_write_en => reg_array[2][7].ENA
reg_write_en => reg_array[2][6].ENA
reg_write_en => reg_array[2][5].ENA
reg_write_en => reg_array[2][4].ENA
reg_write_en => reg_array[2][3].ENA
reg_write_en => reg_array[2][2].ENA
reg_write_en => reg_array[2][1].ENA
reg_write_en => reg_array[2][0].ENA
reg_write_en => reg_array[3][15].ENA
reg_write_en => reg_array[3][14].ENA
reg_write_en => reg_array[3][13].ENA
reg_write_en => reg_array[3][12].ENA
reg_write_en => reg_array[3][11].ENA
reg_write_en => reg_array[3][10].ENA
reg_write_en => reg_array[3][9].ENA
reg_write_en => reg_array[3][8].ENA
reg_write_en => reg_array[3][7].ENA
reg_write_en => reg_array[3][6].ENA
reg_write_en => reg_array[3][5].ENA
reg_write_en => reg_array[3][4].ENA
reg_write_en => reg_array[3][3].ENA
reg_write_en => reg_array[3][2].ENA
reg_write_en => reg_array[3][1].ENA
reg_write_en => reg_array[3][0].ENA
reg_write_en => reg_array[4][15].ENA
reg_write_en => reg_array[4][14].ENA
reg_write_en => reg_array[4][13].ENA
reg_write_en => reg_array[4][12].ENA
reg_write_en => reg_array[4][11].ENA
reg_write_en => reg_array[4][10].ENA
reg_write_en => reg_array[4][9].ENA
reg_write_en => reg_array[4][8].ENA
reg_write_en => reg_array[4][7].ENA
reg_write_en => reg_array[4][6].ENA
reg_write_en => reg_array[4][5].ENA
reg_write_en => reg_array[4][4].ENA
reg_write_en => reg_array[4][3].ENA
reg_write_en => reg_array[4][2].ENA
reg_write_en => reg_array[4][1].ENA
reg_write_en => reg_array[4][0].ENA
reg_write_en => reg_array[5][15].ENA
reg_write_en => reg_array[5][14].ENA
reg_write_en => reg_array[5][13].ENA
reg_write_en => reg_array[5][12].ENA
reg_write_en => reg_array[5][11].ENA
reg_write_en => reg_array[5][10].ENA
reg_write_en => reg_array[5][9].ENA
reg_write_en => reg_array[5][8].ENA
reg_write_en => reg_array[5][7].ENA
reg_write_en => reg_array[5][6].ENA
reg_write_en => reg_array[5][5].ENA
reg_write_en => reg_array[5][4].ENA
reg_write_en => reg_array[5][3].ENA
reg_write_en => reg_array[5][2].ENA
reg_write_en => reg_array[5][1].ENA
reg_write_en => reg_array[5][0].ENA
reg_write_en => reg_array[6][15].ENA
reg_write_en => reg_array[6][14].ENA
reg_write_en => reg_array[6][13].ENA
reg_write_en => reg_array[6][12].ENA
reg_write_en => reg_array[6][11].ENA
reg_write_en => reg_array[6][10].ENA
reg_write_en => reg_array[6][9].ENA
reg_write_en => reg_array[6][8].ENA
reg_write_en => reg_array[6][7].ENA
reg_write_en => reg_array[6][6].ENA
reg_write_en => reg_array[6][5].ENA
reg_write_en => reg_array[6][4].ENA
reg_write_en => reg_array[6][3].ENA
reg_write_en => reg_array[6][2].ENA
reg_write_en => reg_array[6][1].ENA
reg_write_en => reg_array[6][0].ENA
reg_write_en => reg_array[7][15].ENA
reg_write_en => reg_array[7][14].ENA
reg_write_en => reg_array[7][13].ENA
reg_write_en => reg_array[7][12].ENA
reg_write_en => reg_array[7][11].ENA
reg_write_en => reg_array[7][10].ENA
reg_write_en => reg_array[7][9].ENA
reg_write_en => reg_array[7][8].ENA
reg_write_en => reg_array[7][7].ENA
reg_write_en => reg_array[7][6].ENA
reg_write_en => reg_array[7][5].ENA
reg_write_en => reg_array[7][4].ENA
reg_write_en => reg_array[7][3].ENA
reg_write_en => reg_array[7][2].ENA
reg_write_en => reg_array[7][1].ENA
reg_write_en => reg_array[7][0].ENA
reg_write_dest[0] => Decoder0.IN2
reg_write_dest[1] => Decoder0.IN1
reg_write_dest[2] => Decoder0.IN0
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[0] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[1] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[2] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[3] => reg_array.DATAB
reg_write_data[4] => reg_array.DATAB
reg_write_data[4] => reg_array.DATAB
reg_write_data[4] => reg_array.DATAB
reg_write_data[4] => reg_array.DATAB
reg_write_data[4] => reg_array.DATAB
reg_write_data[4] => reg_array.DATAB
reg_write_data[4] => reg_array.DATAB
reg_write_data[4] => reg_array.DATAB
reg_write_data[5] => reg_array.DATAB
reg_write_data[5] => reg_array.DATAB
reg_write_data[5] => reg_array.DATAB
reg_write_data[5] => reg_array.DATAB
reg_write_data[5] => reg_array.DATAB
reg_write_data[5] => reg_array.DATAB
reg_write_data[5] => reg_array.DATAB
reg_write_data[5] => reg_array.DATAB
reg_write_data[6] => reg_array.DATAB
reg_write_data[6] => reg_array.DATAB
reg_write_data[6] => reg_array.DATAB
reg_write_data[6] => reg_array.DATAB
reg_write_data[6] => reg_array.DATAB
reg_write_data[6] => reg_array.DATAB
reg_write_data[6] => reg_array.DATAB
reg_write_data[6] => reg_array.DATAB
reg_write_data[7] => reg_array.DATAB
reg_write_data[7] => reg_array.DATAB
reg_write_data[7] => reg_array.DATAB
reg_write_data[7] => reg_array.DATAB
reg_write_data[7] => reg_array.DATAB
reg_write_data[7] => reg_array.DATAB
reg_write_data[7] => reg_array.DATAB
reg_write_data[7] => reg_array.DATAB
reg_write_data[8] => reg_array.DATAB
reg_write_data[8] => reg_array.DATAB
reg_write_data[8] => reg_array.DATAB
reg_write_data[8] => reg_array.DATAB
reg_write_data[8] => reg_array.DATAB
reg_write_data[8] => reg_array.DATAB
reg_write_data[8] => reg_array.DATAB
reg_write_data[8] => reg_array.DATAB
reg_write_data[9] => reg_array.DATAB
reg_write_data[9] => reg_array.DATAB
reg_write_data[9] => reg_array.DATAB
reg_write_data[9] => reg_array.DATAB
reg_write_data[9] => reg_array.DATAB
reg_write_data[9] => reg_array.DATAB
reg_write_data[9] => reg_array.DATAB
reg_write_data[9] => reg_array.DATAB
reg_write_data[10] => reg_array.DATAB
reg_write_data[10] => reg_array.DATAB
reg_write_data[10] => reg_array.DATAB
reg_write_data[10] => reg_array.DATAB
reg_write_data[10] => reg_array.DATAB
reg_write_data[10] => reg_array.DATAB
reg_write_data[10] => reg_array.DATAB
reg_write_data[10] => reg_array.DATAB
reg_write_data[11] => reg_array.DATAB
reg_write_data[11] => reg_array.DATAB
reg_write_data[11] => reg_array.DATAB
reg_write_data[11] => reg_array.DATAB
reg_write_data[11] => reg_array.DATAB
reg_write_data[11] => reg_array.DATAB
reg_write_data[11] => reg_array.DATAB
reg_write_data[11] => reg_array.DATAB
reg_write_data[12] => reg_array.DATAB
reg_write_data[12] => reg_array.DATAB
reg_write_data[12] => reg_array.DATAB
reg_write_data[12] => reg_array.DATAB
reg_write_data[12] => reg_array.DATAB
reg_write_data[12] => reg_array.DATAB
reg_write_data[12] => reg_array.DATAB
reg_write_data[12] => reg_array.DATAB
reg_write_data[13] => reg_array.DATAB
reg_write_data[13] => reg_array.DATAB
reg_write_data[13] => reg_array.DATAB
reg_write_data[13] => reg_array.DATAB
reg_write_data[13] => reg_array.DATAB
reg_write_data[13] => reg_array.DATAB
reg_write_data[13] => reg_array.DATAB
reg_write_data[13] => reg_array.DATAB
reg_write_data[14] => reg_array.DATAB
reg_write_data[14] => reg_array.DATAB
reg_write_data[14] => reg_array.DATAB
reg_write_data[14] => reg_array.DATAB
reg_write_data[14] => reg_array.DATAB
reg_write_data[14] => reg_array.DATAB
reg_write_data[14] => reg_array.DATAB
reg_write_data[14] => reg_array.DATAB
reg_write_data[15] => reg_array.DATAB
reg_write_data[15] => reg_array.DATAB
reg_write_data[15] => reg_array.DATAB
reg_write_data[15] => reg_array.DATAB
reg_write_data[15] => reg_array.DATAB
reg_write_data[15] => reg_array.DATAB
reg_write_data[15] => reg_array.DATAB
reg_write_data[15] => reg_array.DATAB
reg_read_addr_1[0] => Mux0.IN2
reg_read_addr_1[0] => Mux1.IN2
reg_read_addr_1[0] => Mux2.IN2
reg_read_addr_1[0] => Mux3.IN2
reg_read_addr_1[0] => Mux4.IN2
reg_read_addr_1[0] => Mux5.IN2
reg_read_addr_1[0] => Mux6.IN2
reg_read_addr_1[0] => Mux7.IN2
reg_read_addr_1[0] => Mux8.IN2
reg_read_addr_1[0] => Mux9.IN2
reg_read_addr_1[0] => Mux10.IN2
reg_read_addr_1[0] => Mux11.IN2
reg_read_addr_1[0] => Mux12.IN2
reg_read_addr_1[0] => Mux13.IN2
reg_read_addr_1[0] => Mux14.IN2
reg_read_addr_1[0] => Mux15.IN2
reg_read_addr_1[1] => Mux0.IN1
reg_read_addr_1[1] => Mux1.IN1
reg_read_addr_1[1] => Mux2.IN1
reg_read_addr_1[1] => Mux3.IN1
reg_read_addr_1[1] => Mux4.IN1
reg_read_addr_1[1] => Mux5.IN1
reg_read_addr_1[1] => Mux6.IN1
reg_read_addr_1[1] => Mux7.IN1
reg_read_addr_1[1] => Mux8.IN1
reg_read_addr_1[1] => Mux9.IN1
reg_read_addr_1[1] => Mux10.IN1
reg_read_addr_1[1] => Mux11.IN1
reg_read_addr_1[1] => Mux12.IN1
reg_read_addr_1[1] => Mux13.IN1
reg_read_addr_1[1] => Mux14.IN1
reg_read_addr_1[1] => Mux15.IN1
reg_read_addr_1[2] => Mux0.IN0
reg_read_addr_1[2] => Mux1.IN0
reg_read_addr_1[2] => Mux2.IN0
reg_read_addr_1[2] => Mux3.IN0
reg_read_addr_1[2] => Mux4.IN0
reg_read_addr_1[2] => Mux5.IN0
reg_read_addr_1[2] => Mux6.IN0
reg_read_addr_1[2] => Mux7.IN0
reg_read_addr_1[2] => Mux8.IN0
reg_read_addr_1[2] => Mux9.IN0
reg_read_addr_1[2] => Mux10.IN0
reg_read_addr_1[2] => Mux11.IN0
reg_read_addr_1[2] => Mux12.IN0
reg_read_addr_1[2] => Mux13.IN0
reg_read_addr_1[2] => Mux14.IN0
reg_read_addr_1[2] => Mux15.IN0
reg_read_data_1[0] <= Mux15.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_1[1] <= Mux14.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_1[2] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_1[3] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_1[4] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_1[5] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_1[6] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_1[7] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_1[8] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_1[9] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_1[10] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_1[11] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_1[12] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_1[13] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_1[14] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_1[15] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
reg_read_addr_2[0] => Mux16.IN2
reg_read_addr_2[0] => Mux17.IN2
reg_read_addr_2[0] => Mux18.IN2
reg_read_addr_2[0] => Mux19.IN2
reg_read_addr_2[0] => Mux20.IN2
reg_read_addr_2[0] => Mux21.IN2
reg_read_addr_2[0] => Mux22.IN2
reg_read_addr_2[0] => Mux23.IN2
reg_read_addr_2[0] => Mux24.IN2
reg_read_addr_2[0] => Mux25.IN2
reg_read_addr_2[0] => Mux26.IN2
reg_read_addr_2[0] => Mux27.IN2
reg_read_addr_2[0] => Mux28.IN2
reg_read_addr_2[0] => Mux29.IN2
reg_read_addr_2[0] => Mux30.IN2
reg_read_addr_2[0] => Mux31.IN2
reg_read_addr_2[1] => Mux16.IN1
reg_read_addr_2[1] => Mux17.IN1
reg_read_addr_2[1] => Mux18.IN1
reg_read_addr_2[1] => Mux19.IN1
reg_read_addr_2[1] => Mux20.IN1
reg_read_addr_2[1] => Mux21.IN1
reg_read_addr_2[1] => Mux22.IN1
reg_read_addr_2[1] => Mux23.IN1
reg_read_addr_2[1] => Mux24.IN1
reg_read_addr_2[1] => Mux25.IN1
reg_read_addr_2[1] => Mux26.IN1
reg_read_addr_2[1] => Mux27.IN1
reg_read_addr_2[1] => Mux28.IN1
reg_read_addr_2[1] => Mux29.IN1
reg_read_addr_2[1] => Mux30.IN1
reg_read_addr_2[1] => Mux31.IN1
reg_read_addr_2[2] => Mux16.IN0
reg_read_addr_2[2] => Mux17.IN0
reg_read_addr_2[2] => Mux18.IN0
reg_read_addr_2[2] => Mux19.IN0
reg_read_addr_2[2] => Mux20.IN0
reg_read_addr_2[2] => Mux21.IN0
reg_read_addr_2[2] => Mux22.IN0
reg_read_addr_2[2] => Mux23.IN0
reg_read_addr_2[2] => Mux24.IN0
reg_read_addr_2[2] => Mux25.IN0
reg_read_addr_2[2] => Mux26.IN0
reg_read_addr_2[2] => Mux27.IN0
reg_read_addr_2[2] => Mux28.IN0
reg_read_addr_2[2] => Mux29.IN0
reg_read_addr_2[2] => Mux30.IN0
reg_read_addr_2[2] => Mux31.IN0
reg_read_data_2[0] <= Mux31.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_2[1] <= Mux30.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_2[2] <= Mux29.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_2[3] <= Mux28.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_2[4] <= Mux27.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_2[5] <= Mux26.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_2[6] <= Mux25.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_2[7] <= Mux24.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_2[8] <= Mux23.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_2[9] <= Mux22.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_2[10] <= Mux21.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_2[11] <= Mux20.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_2[12] <= Mux19.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_2[13] <= Mux18.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_2[14] <= Mux17.DB_MAX_OUTPUT_PORT_TYPE
reg_read_data_2[15] <= Mux16.DB_MAX_OUTPUT_PORT_TYPE


